openapi: 3.1.0

info:
  title: Social Network
  description: Api for social network
  version: 1.0.0

tags:
  - name: auth
    description: access to social network
  - name: verification
    description: social network verification

paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/forms/login'

      responses:
        '200':
          description: Receive access token and user data
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/ok'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/user_profile'
        '400':
          description: Invalid fields
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/error'
                  - type: object
                    properties:
                      error:
                        type: string
                        example: Body can't be empty
        '401':
          description: Forbidden to login
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/error'
                  - type: object
                    properties:
                      statusCode:
                        type: number
                        example: 401
                      error:
                        type: string
                        example: No user with this email

  /auth/signup:
    post:
      tags:
        - auth
      summary: signup user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/forms/signup'

      responses:
        '200':
          description: Access token and user data
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/ok'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      message:
                        type: text
                        example: Congratulations, your account has been
                          successfully created. Please, check your email.
                          We sent an verification on joshhaley@hotmail.com
        '400':
          description: No request body
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/error'
                  - type: object
                    properties:
                      error:
                        type: string
                        example: Passwords don't match
        '409':
          description: Can't sing up
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/error'
                  - type: object
                    properties:
                      statusCode:
                        type: number
                        example: 409
                      error:
                        type: string
                        example: Email is already taken

  /auth/logout:
    post:
      tags:
        - auth
      summary: logout user
      responses:
        '200':
          description: remove refresh token
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/ok'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      message:
                        type: text
                        example: Logout successfully

  /auth/verify-refresh:
    post:
      tags:
        - auth
      summary: verify refresh token
      responses:
        '200':
          description: token was verified and a new pair of tokens was given
          headers:
            Set-Cookie:
              schema:
                type: string
                example: refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.
                  eyJpZCI6MSwiZW1haWwiOiJkZW5pc0BnbWFpbC5jb20iLCJyb2xlIjoidXNlciIsImlhdCI6MTcxNzY2MjE2MywiZXhwIjoxNzIwMjU0MTYzfQ.
                  QYQbbxf_oFn1yQz7wTWGawNUldebjUONhMKIIw9MQes; HttpOnly
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/ok'
                  - type: object
                    properties:
                      data:
                        type: object
                        example:
                          accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.
                            eyJpZCI6MSwiZW1haWwiOiJkZW5pc0BnbWFpbC5jb20iLCJyb2xlIjoidXNlciIsImlhdCI6MTcxNzY2MjE2MywiZXhwIjoxNzE3NjYzMDYzfQ.
                            CD7ExOJ9KMDRI11sjOPrRNBfOz6KTuTM876JfJwweXc
                      message:
                        type: text
                        example: You have received a new pair of tokens! üçêüçè
        '401':
          description: invalid or no token
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/error'
                  - type: object
                    properties:
                      statusCode:
                        type: number
                        example: 401
                      error:
                        type: string
                        example: No refresh token

  /auth/forgot-password:
    post:
      tags:
        - auth
      summary: create forgot password verification
      responses:
        '200':
          description:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/ok'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      message:
                        type: text
                        example: Forgot password verification was created ‚ú®.
                          Check you email address
        '400':
          description: token was expired
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/ok'
                  - type: object
                    properties:
                      statusCode:
                        type: number
                        example: 400
                      message:
                        type: text
                        example:
                          You forgot password verification token has been expired.
                          Create another one!
        '401':
          description: no user with this email
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/ok'
                  - type: object
                    properties:
                      statusCode:
                        type: number
                        example: 401
                      message:
                        type: text
                        example: No user with this email
        '409':
          description: create another verification if one has already been created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/error'
                  - type: object
                    properties:
                      statusCode:
                        type: number
                        example: 409
                      error:
                        type: string
                        example:
                          You have already created a forgot password verification.
                          Follow the link which was send on your email
    patch:
      tags:
        - auth
      summary: update password
      parameters:
        - in: cookie
          name: forgot-password-token
          type: integer
          example: 3&263294f3d50849d7608bb57d56f9777a6beed309c7d78723cd24088fe51a5a8aff;

      responses:
        '200':
          description: password was update
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/ok'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      message:
                        type: text
                        example: Your password has been updatedü§ò
        '400':
          description: No password token
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/ok'
                  - type: object
                    properties:
                      statusCode:
                        type: number
                        example: 400
                      message:
                        type: text
                        example: No forgot password token

  /auth/forgot-password/{token}:
    post:
      tags:
        - auth
      summary: validate forgot password token
      responses:
        '200':
          description:
          headers:
            Set-Cookie:
              schema:
                type: string
                example: forgot-password-token=
                  3&263294f3d50849d7608bb57d56f9777a6beed309c7d78723cd24088fe51a5a8aff;
                  HttpOnly
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/ok'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      message:
                        type: text
                        example: Forgot password token was verified üçí

        '400':
          description:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/error'
                  - type: object
                    properties:
                      statusCode:
                        type: number
                        example: 400
                      error:
                        type: text
                        example: Invalid forgot password token"

  /verifications/email/new:
    post:
      tags:
        - verification
      security:
        - bearerToken: []
      summary: new verification email link
      responses:
        '200':
          description: send another verification link if previous one has expired
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/ok'
                  - properties:
                      data:
                        type: object
                        example: null
                      message:
                        type: string
                        example: A new verify link has been created and send on your email! ‚úÖ
        '400':
          description: account already verified
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/error'
                  - properties:
                      error:
                        type: string
                        example: You can't create a new token, because the current one hasn't expired yet
        '401':
          description: invalid or no token
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/error'
                  - properties:
                      statusCode:
                        type: number
                        example: 401
                      error:
                        type: object
                        example: No bearer token
        '409':
          description: account can't be verified twice
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/error'
                  - properties:
                      statusCode:
                        type: number
                        example: 409
                      error:
                        type: string
                        example: Your email is already verified

  /verifications/email/{token}:
    get:
      tags:
        - verification
      summary: verify user email
      parameters:
        - in: path
          name: token
          schema:
            type: string
          required: true

      responses:
        '200':
          description: verification by email address
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/ok'
                  - properties:
                      data:
                        type: object
                        example: null
                      message:
                        type: object
                        example: 'Your email address has been verified! üëç'
        '400':
          description: Invalid token
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/replies/error'
                  - properties:
                      error:
                        type: object
                        example: 'Invalid token'

components:
  securitySchemes:
    bearerToken:
      type: http
      scheme: Bearer
      bearerFormat: JWT

  schemas:
    user:
      type: object
      properties:
        id:
          type: number
          example: 1
        email:
          type: string
          example: Josh.Haley@hotmail.com
        username:
          type: [string, null]
          example: Finn14
        photo:
          type: [string, null]
          example: https://i.pinimg.com/736x/e6/82/92/e68292aca045835f376220eeee421c1d.jpg
        firstname:
          type: [string, null]
          example: Merritt
        lastname:
          type: [string, null]
          example: Bailey
        role:
          type: string
          example: Admin

    profile:
      type: object
      properties:
        id:
          type: string
          example: a9364570-c50d-4298-90f1-f36325a13471
        userId:
          type: number
          example: 1
        about:
          type: string
          example: aglet lover, grad üß©
        birthday:
          type: [date, null]
          example: 2024-06-05T15:02:57.345Z
        isActive:
          type: boolean
          example: true
        isOfficial:
          type: boolean
          example: false
        isVerified:
          type: boolean
          example: true
        createdAt:
          type: date
          example: 2024-06-05T15:02:57.345Z
        updatedAt:
          type: date
          example: 2024-06-05T15:02:57.345Z

    user_profile:
      allOf:
        - $ref: '#/components/schemas/user'
        - properties:
            profile:
              $ref: '#/components/schemas/profile'

  forms:
    login:
      type: object
      properties:
        email:
          type: string
          example: joshhaley@hotmail.com
        password:
          type: string
          example: password2024
        rememberMe:
          type: boolean
          example: true

    signup:
      type: object
      properties:
        email:
          type: string
          example: joshhaley@hotmail.com
        password:
          type: string
          example: password2024
        confirmPassword:
          type: boolean
          example: password2024

  replies:
    ok:
      type: object
      properties:
        success:
          type: boolean
          example: true
        statusCode:
          type: number
          example: 200
        message:
          type: string
          example: 'Some text...'

    error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        statusCode:
          type: number
          example: 400
        error:
          type: string
          example: 'Some text...'
